# -*- coding: utf-8 -*-
"""ex1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1fzIhl7PpQMePZAnFyOHze2ERscO_Sya_
"""



from google.colab import drive
drive.mount('/content/drive')

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns



df = pd.read_csv('/content/daily-website-visitors.csv')

"""# New Section"""

df.head(10)

df.tail(10)

df.shape

df.describe(include='all').T

df.info()

data_null = df.notnull().sum

df['Page.Loads'] = df['Page.Loads'].str.replace(',', '').astype(int)



daywise_data = df.groupby('Day')['Page.Loads'].sum()


daywise_data.plot(kind='bar', figsize=(8, 5), color='purple')
plt.title('Page Loads by Day of the Week')
plt.xlabel('Day of the Week')
plt.ylabel('Page Loads')
plt.xticks(rotation=45)

plt.show()

data = df.drop_duplicates()


print(f"Dataset now has {data.shape[0]} rows and {data.shape[1]} columns.")

df.plot(figsize=(14,7))

df = df.dropna()

df.shape

plt.figure(figsize=(14, 7))
plt.plot(df['Date'], df['Page.Loads'], color='blue')
plt.title('Page Loads Over Time')
plt.xlabel('Date')
plt.ylabel('Page Loads')
plt.xticks(rotation=45)
plt.show()

plt.figure(figsize=(8, 5))
sns.histplot(df['Page.Loads'], bins=30, kde=True, color='green')
plt.title('Distribution of Page Loads')
plt.xlabel('Page Loads')
plt.ylabel('Frequency')
plt.show()

plt.figure(figsize=(8, 5))
sns.boxplot(x=df['Page.Loads'], color='orange')
plt.title('Box Plot of Page Loads')
plt.xlabel('Page Loads')
plt.show()

plt.figure(figsize=(8, 5))
plt.scatter(df['Unique.Visits'], df['Page.Loads'], color='red')
plt.title('Scatter Plot of Unique Visits vs Page Loads')
plt.xlabel('Unique Visits')
plt.ylabel('Page Loads')
plt.show()

rolling_mean = df['Page.Loads'].rolling(window=7).mean()
rolling_std = df['Page.Loads'].rolling(window=7).std()

plt.figure(figsize=(14, 7))
plt.plot(df['Page.Loads'], color='blue', label='Original')
plt.plot(rolling_mean, color='red', label='Rolling Mean')
plt.plot(rolling_std, color='black', label='Rolling Std')
plt.title('Page Loads with Rolling Mean & Standard Deviation')
plt.xlabel('Date')
plt.ylabel('Page Loads')
plt.legend()
plt.show()